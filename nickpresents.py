# -*- coding: utf-8 -*-
"""Nickpresents.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zgFbBH7gc0q-RbF3cQXMUAP7B0jdL1T0
"""

!pip install aiogram
!pip install nest-asyncio
import nest_asyncio
nest_asyncio.apply()
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton  # for reply keyboard (sends message)

from time import sleep

bot = Bot(token='5797659424:AAHhiLaVZZm2HLIGWg_6SoLqKxU_Jun2sPE')
dp = Dispatcher(bot)

answers = []  # store the answers they have given

# Nick selection
Nick1 = KeyboardButton('–£—Ç—Ä–µ–Ω–Ω–∏–π –ù–∏–∫–∏—Ç–∞')  
Nick2 = KeyboardButton('–î–Ω–µ–≤–Ω–æ–π –ù–∏–∫–∏—Ç–∞')
Nick3 = KeyboardButton('–í–µ—á–µ—Ä–Ω–∏–π –ù–∏–∫–∏—Ç–∞')
Nick4 = KeyboardButton('–ù–æ—á–Ω–æ–π –ù–∏–∫–∏—Ç–∞')
Nick_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(Nick1).add(Nick2).add(Nick3).add(Nick4)


# sends welcome message after start
@dp.message_handler(commands=['start'])
async def welcome(message: types.Message):
    await message.answer('Meow!üêà‚Äç‚¨õ –£ –Ω–∞—Å –µ—Å—Ç—å –ø–æ–¥–∞—Ä–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ù–∏–∫–∏—Ç. –û–Ω–∏ –º–æ–≥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—é–¥–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ –≤—Å–µ–≥–æ –¥–Ω—è –∏ –∑–∞–±–∏—Ä–∞—Ç—å –∏—Ö –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º. –ù–∞—á–Ω—ë–º –∂–µ!üßôüèª‚Äç‚ôÄÔ∏è', reply_markup = Nick_kb)
    await message.answer('–ö–∞–∫–æ–π —Ç—ã –ù–∏–∫–∏—Ç–∞ —Å–µ–π—á–∞—Å?', reply_markup = Nick_kb)
    
# options selection: –£—Ç—Ä–µ–Ω–Ω–∏–π –ù–∏–∫–∏—Ç–∞
morning_Nick = KeyboardButton('–í–∑—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ—á–µ–∫ –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ù–∏–∫–∏—Ç—ã')
back_Nick = KeyboardButton('üîô –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ù–∏–∫–∏—Ç—É')
morning_Nick_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(morning_Nick).add(back_Nick)

daily_Nick = KeyboardButton('–ó–¥–µ—Å—å art-and-science –ø–æ–¥–∞—Ä–æ—á–µ–∫ –¥–ª—è –¥–Ω–µ–≤–Ω–æ–≥–æ –ù–∏–∫–∏—Ç—ã')
back_Nick = KeyboardButton('üîô –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ù–∏–∫–∏—Ç—É')
daily_Nick_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(daily_Nick).add(back_Nick)

evening_Nick = KeyboardButton('Magical –ø–æ–¥–∞—Ä–æ—á–µ–∫ –∂–¥—ë—Ç –≤–µ—á–µ—Ä–Ω–µ–≥–æ –ù–∏–∫–∏—Ç—É')
back_Nick = KeyboardButton('üîô –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ù–∏–∫–∏—Ç—É')
evening_Nick_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(evening_Nick).add(back_Nick)

night_Nick = KeyboardButton('–ó–∞–±—Ä–∞—Ç—å wild –ø–æ–¥–∞—Ä–æ—á–µ–∫ –¥–ª—è –Ω–æ—á–Ω–æ–≥–æ –ù–∏–∫–∏—Ç—ã')
back_Nick = KeyboardButton('üîô –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ù–∏–∫–∏—Ç—É')
night_Nick_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(night_Nick).add(back_Nick)

@dp.message_handler(regexp='üîô –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ù–∏–∫–∏—Ç—É')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('–ö–∞–∫–æ–π —Ç—ã –ù–∏–∫–∏—Ç–∞ —Å–µ–π—á–∞—Å?', reply_markup = Nick_kb)
    

#### selecting what you need
@dp.message_handler(regexp='–£—Ç—Ä–µ–Ω–Ω–∏–π –ù–∏–∫–∏—Ç–∞')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('üßôüèª‚Äç‚ôÇÔ∏è', reply_markup = morning_Nick_kb)
    await bot.send_photo(message.chat.id, photo="https://cdn.midjourney.com/cbb0eaa8-2be8-4078-81ae-1be9e6a159a7/grid_0.png")

@dp.message_handler(regexp='–í–∑—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ—á–µ–∫ –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ù–∏–∫–∏—Ç—ã')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('–í–æ—Ç –∑–¥–µ—Å—å –ø–æ–¥–∞—Ä–æ—á–µ–∫: https://docs.google.com/document/d/1CnQquX-eXNQSE3eLhT_TLtvWSPdAcfDh1k98wQz81bA/edit?usp=sharing', reply_markup = morning_Nick_kb)

@dp.message_handler(regexp='–î–Ω–µ–≤–Ω–æ–π –ù–∏–∫–∏—Ç–∞')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('üßôüèª‚Äç‚ôÇÔ∏è', reply_markup = daily_Nick_kb)
    await bot.send_photo(message.chat.id, photo="https://cdn.midjourney.com/cbb0eaa8-2be8-4078-81ae-1be9e6a159a7/grid_0.png")

@dp.message_handler(regexp='–¢—É—Ç art-and-science –ø–æ–¥–∞—Ä–æ—á–µ–∫ –¥–ª—è –¥–Ω–µ–≤–Ω–æ–≥–æ –ù–∏–∫–∏—Ç—ã')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('–õ–æ–≤–∏:', reply_markup = daily_Nick_kb)

@dp.message_handler(regexp='–í–µ—á–µ—Ä–Ω–∏–π –ù–∏–∫–∏—Ç–∞')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('üßôüèª‚Äç‚ôÇÔ∏è', reply_markup = evening_Nick_kb)
    await bot.send_photo(message.chat.id, photo="https://cdn.midjourney.com/de1601ef-a730-4fb0-b47e-f3f09f09ddf6/grid_0.png")

@dp.message_handler(regexp='Magical –ø–æ–¥–∞—Ä–æ—á–µ–∫ –∂–¥—ë—Ç –≤–µ—á–µ—Ä–Ω–µ–≥–æ –ù–∏–∫–∏—Ç—É')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('–ê –≤–æ—Ç –∏ –æ–Ω: https://docs.google.com/document/d/1CnQquX-eXNQSE3eLhT_TLtvWSPdAcfDh1k98wQz81bA/edit?usp=sharing', reply_markup = evening_Nick_kb)

@dp.message_handler(regexp='–ù–æ—á–Ω–æ–π –ù–∏–∫–∏—Ç–∞')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('üßôüèª‚Äç‚ôÇÔ∏è', reply_markup = night_Nick_kb)
    await bot.send_photo(message.chat.id, photo="https://cdn.midjourney.com/416ba6e3-9837-40cf-a421-1e620a698005/grid_0.png")

@dp.message_handler(regexp='–ó–∞–±—Ä–∞—Ç—å wild –ø–æ–¥–∞—Ä–æ—á–µ–∫ –¥–ª—è –Ω–æ—á–Ω–æ–≥–æ –ù–∏–∫–∏—Ç—ã')
async def english(message: types.Message):
    answers.append(message.text)
    await message.answer('Enjoy:', reply_markup = night_Nick_kb)

# this is the last line
executor.start_polling(dp)

